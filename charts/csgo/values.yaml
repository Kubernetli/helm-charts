



## Configuration
config:

  ## Environment Variable: SRCDS_RCONPW="changeme" (value can be overwritten by csgo/cfg/server.cfg)
  rcon_password: ""

  ## Environment Variable: SRCDS_PW="changeme" (value can be overwritten by csgo/cfg/server.cfg)
  password: ""

  ## Environment Variable: SRCDS_PORT=27015
  port: 27015

  ## Environment Variable: SRCDS_TV_PORT=27020
  tv_port: 27020

  ## Environment Variable: SRCDS_HOSTNAME="New CSGO Server" (first launch only)
  hostname: "Custom CS GO Server"

  ## Environment Variable: SRCDS_NET_PUBLIC_ADDRESS="0" (public facing ip, useful for local network setups)
  public_address: "0"

  ## Environment Variable: SRCDS_IP="0" (local ip to bind)
  local_address: "0"

  ## Environment Variable: SRCDS_FPSMAX=300
  maxfps: 300

  ## Environment Variable: SRCDS_TICKRATE=128
  tickrate: 128

  ## Environment Variable: RCDS_MAXPLAYERS=14
  maxplayers: 14

  ## Environment Variable: SRCDS_REGION=3
  region: 3

  map:

    ## Environment Variable: SRCDS_STARTMAP="de_dust2"
    start: "de_dust2"

    ## Environment Variable: SRCDS_MAPGROUP="mg_active"
    group: "mg_active"

  game:

    ## Environment Variable: SRCDS_GAMETYPE=0
    type: 0

    ## Environment Variable: SRCDS_GAMEMODE=1
    mode: 1

  workshop:

    ## Environment Variable: SRCDS_WORKSHOP_START_MAP=0
    start_map: 0

    ## Environment Variable: SRCDS_HOST_WORKSHOP_COLLECTION=1
    collection: 1

    ## Environment Variable: SRCDS_WORKSHOP_AUTHKEY="" (required to use host_workshop_map)
    auth: ""

  ## Environment Variable: ADDITIONAL_ARGS="" (Pass additional arguments to srcds. Make sure to escape correctly!)
  additional_args: []



# Default values for csgo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
