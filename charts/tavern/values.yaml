


## Templates
stageTemplates:

  - name: "http_basic"
    values:
      SOMETHING_HERE: "a"
    template: |
      request:
        url: "{host}/users/{{ $.tavern.endpoint }}"
        verify: false
        method: GET
        auth:
          - "{tavern.env_vars.KIBANA_USER}"
          - "{tavern.env_vars.KIBANA_PASSWORD}"
        json:
          test: true
        headers:
          content-type: application/json
      response:
        status_code:
          - 200
          - 404


testTemplates:

  - name: "http_stage"
    values: {}
    template: |

      includes:
        - !include common.yaml

      stages:

        ## Straight Test
        - name: "Try to get user"
          stage:
            request:
              url: "{host}/users/joebloggs"
              method: GET
            response:
              status_code:
                - 200
                - 404

        ## Use Template
        - name: "test_name"
          template: "http_basic"
          values:
            endpoint: "Products"
          stage:
            request:
              verify: true

        ## Use Template
        - name: "WHERE ME"
          template: "http_basic"
          values:
            endpoint: "Products"
          stage:
            request:
              verify: true






## TestSuites
tests:

    ## Test Name
  - name: "Template Suite"

    ## Referenced Template
    template: "http_stage"

    ## Deploy as Secret
    secret: true

    ## Values Used for Template
    values:
      enable_products: true

    ## Tavern Test Definition
    test:
      stages:
        - name: "test_name"
          stage:
            test: "me"

  ## Test Suite
  - name: "Sample Suite"

    ## Write As Secrect
    stages:

      ## Straight Test
      - name: "Try to get user"
        stage:
          request:
            url: "{host}/users/joebloggs"
            method: GET
            json:
              clusterName: "test"
          response:
            status_code:
              - 200
              - 404


      ## Use Template
      - name: "Some Stage"
        template: "http_basic"
        values:
          endpoint: "Products"
        stage:
          request:
            verify: true

















# ault values for tavern.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
